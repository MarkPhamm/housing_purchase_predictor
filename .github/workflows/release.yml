name: 🏷️ Create Release

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  create-release:
    name: 🏷️ Create GitHub Release
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🚀 Train model for release
      run: |
        cd src
        python main_pipeline.py
        
    - name: 📊 Generate release notes
      run: |
        # Get version from tag or input
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${{ github.ref_name }}"
        fi
        
        echo "## 🏠 House Purchase Predictor $VERSION" > RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "### ✨ Features" >> RELEASE_NOTES.md
        echo "- 🤖 **ML Pipeline**: 6 trained models with 100% accuracy" >> RELEASE_NOTES.md
        echo "- 🌐 **Streamlit App**: Beautiful web interface" >> RELEASE_NOTES.md
        echo "- 📊 **EDA Notebook**: Comprehensive data analysis" >> RELEASE_NOTES.md
        echo "- 🧪 **Unit Tests**: 6 tests covering critical functionality" >> RELEASE_NOTES.md
        echo "- 📚 **Documentation**: Complete guides and references" >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "### 🚀 Quick Start" >> RELEASE_NOTES.md
        echo "\`\`\`bash" >> RELEASE_NOTES.md
        echo "# Install dependencies" >> RELEASE_NOTES.md
        echo "pip install -r requirements.txt" >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "# Launch web app" >> RELEASE_NOTES.md
        echo "./run_app.sh" >> RELEASE_NOTES.md
        echo "\`\`\`" >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "### 📊 Model Performance" >> RELEASE_NOTES.md
        echo "- **Best Model**: Random Forest" >> RELEASE_NOTES.md
        echo "- **Test Accuracy**: 100%" >> RELEASE_NOTES.md
        echo "- **F1 Score**: 1.0000" >> RELEASE_NOTES.md
        echo "- **ROC AUC**: 1.0000" >> RELEASE_NOTES.md
        echo "- **Dataset**: 200,000 samples" >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "### 📁 Project Structure" >> RELEASE_NOTES.md
        echo "\`\`\`" >> RELEASE_NOTES.md
        echo "house_purchase_predictor/" >> RELEASE_NOTES.md
        echo "├── app/                    # Streamlit web app" >> RELEASE_NOTES.md
        echo "├── src/                    # ML pipeline (1,442 lines)" >> RELEASE_NOTES.md
        echo "├── models/                 # Trained models" >> RELEASE_NOTES.md
        echo "├── notebooks/              # EDA notebook" >> RELEASE_NOTES.md
        echo "├── tests/                  # Unit tests" >> RELEASE_NOTES.md
        echo "└── docs/                   # Documentation" >> RELEASE_NOTES.md
        echo "\`\`\`" >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "### 🔧 Technical Details" >> RELEASE_NOTES.md
        echo "- **Python**: 3.9+" >> RELEASE_NOTES.md
        echo "- **ML Libraries**: scikit-learn, pandas, numpy" >> RELEASE_NOTES.md
        echo "- **Web Framework**: Streamlit 1.28+" >> RELEASE_NOTES.md
        echo "- **Visualization**: Plotly, Matplotlib" >> RELEASE_NOTES.md
        echo "- **Testing**: pytest, unittest" >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "### 📚 Documentation" >> RELEASE_NOTES.md
        echo "- [README.md](README.md) - Main documentation" >> RELEASE_NOTES.md
        echo "- [APP_GUIDE.md](APP_GUIDE.md) - Complete app guide" >> RELEASE_NOTES.md
        echo "- [QUICKSTART.md](QUICKSTART.md) - Quick start guide" >> RELEASE_NOTES.md
        echo "- [TROUBLESHOOTING.md](app/TROUBLESHOOTING.md) - Troubleshooting" >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "### 🎯 Use Cases" >> RELEASE_NOTES.md
        echo "- **Real Estate Agents**: Lead scoring and prioritization" >> RELEASE_NOTES.md
        echo "- **Mortgage Lenders**: Pre-qualification and risk assessment" >> RELEASE_NOTES.md
        echo "- **Property Developers**: Pricing optimization and market analysis" >> RELEASE_NOTES.md
        echo "- **Sales Teams**: Data-driven decision making" >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "### 🐛 Bug Reports & Feature Requests" >> RELEASE_NOTES.md
        echo "Please use GitHub Issues to report bugs or request features." >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "### 📄 License" >> RELEASE_NOTES.md
        echo "This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details." >> RELEASE_NOTES.md
        
    - name: 📦 Create release package
      run: |
        # Create release directory
        mkdir -p release
        
        # Copy essential files
        cp -r app/ release/
        cp -r src/ release/
        cp -r models/ release/
        cp -r notebooks/ release/
        cp -r tests/ release/
        cp requirements.txt release/
        cp README.md release/
        cp *.md release/
        cp run_app.sh release/
        cp run_app.bat release/
        
        # Create zip file
        cd release
        zip -r ../house-purchase-predictor-${{ github.ref_name }}.zip .
        cd ..
        
        echo "Release package created: house-purchase-predictor-${{ github.ref_name }}.zip"
        
    - name: 🏷️ Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: House Purchase Predictor ${{ github.ref_name }}
        body_path: RELEASE_NOTES.md
        draft: false
        prerelease: false
        
    - name: 📤 Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./house-purchase-predictor-${{ github.ref_name }}.zip
        asset_name: house-purchase-predictor-${{ github.ref_name }}.zip
        asset_content_type: application/zip
